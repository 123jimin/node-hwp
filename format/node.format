## hwp.format for describing HWP 5.0 records & HWPML nodes
# Explict enum
enum LineType1 {
	None; Solid; Dash; Dot; DashDot; DashDotDot; LongDash; Circle;
	DoubleSlim; SlimThick; ThickSlim; SlimThickSlim;
}
enum LineType2 {
	Solid; Dash; Dot; DashDot; DashDotDot; LongDash; Circle;
	DoubleSlim; SlimThick; ThickSlim; SlimThickSlim;
}
enum LineType3 {
	null; Solid; Dot; Thick; Dash; DashDot; DashDotDot;
}
enum LineWidth {
	"0.1mm"; "0.12mm"; "0.15mm"; "0.2mm"; "0.25mm"; "0.3mm";
	"0.4mm"; "0.5mm"; "0.6mm"; "0.7mm"; "1.0mm"; "1.5mm";
	"2.0mm"; "3.0mm"; "4.0mm"; "5.0mm";
}
enum NumberType1 {
	Digit; CircledDigit; RomanCapital; RomanSmall; LatinCapital;
	LatinSmall; CircledLatinCapital; CircledLatinSmall; HangulSyllable;
	CircledHangulSyllable; HangulJamo; CircledHangulJamo;
	HangulPhonetic; Ideograph; CircledIdeograph;
}
enum NumberType2 {
	Digit; CircledDigit; RomanCapital; RomanSmall; LatinCapital;
	LatinSmall; CircledLatinCapital; CircledLatinSmall; HangulSyllable;
	CircledHangulSyllable; HangulJamo; CircledHangulJamo;
	HangulPhonetic; Ideograph; CircledIdeograph; DecagonCircle;
	DecagonCircleHanja;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; null; null; null; null;  null; null; null; null; null;
	null; Symbol; UserChar;
}
enum AlignmentType1 {
	Justify; Left; Right; Center; Distribute; DistributeSpace;
}
enum AlignmentType2 {
	Left; Center; Right;
}
enum ArrowType {
	Normal; Arrow; Spear; ConcaveArrow; EmptyDiamond; EmptyCircle;
	EmptyBox; FilledDiamond; FilledCircle; FilledBox;
}
enum ArrowSize {
	SmallSmall; SmallMedium; SmallLarge;
	MediumSmall; MediumMedium; MediumLarge;
	LargeSmall; LargeMedium; LargeLarge;
}
enum LangType {
	Hangul; Latin; Hanja; Japanese; Other; Symbol; User;
}
enum HatchStyle {
	Horizontal; Vertical; Slash; BackSlash; Cross; CrossDiagonal;
}
enum InfillMode {
	Tile; TileHorzTop; TileHorzBottom; TileVertLeft; TileVertRight;
	Total; Center; CenterTop; CenterBottom; LeftCenter; LeftTop; LeftBottom;
	RightCenter; RightTop; RightBottom; Zoom;
}
enum LineWrapType {
	Break; Squeeze; Keep;
}
# TODO: DOC: 문서와 실제가 다름. Tight와 Through 확인하기.
enum TextWrapType {
	Square; TopAndBottom; BehindText; InFrontOfText; Tight; Through;
}
enum FieldType {
	Clickhere; Hyperlink; Bookmark; Formula; Summery; UserInfo;
	Date; DocDate; Path; Crossref; Mailmerge; Memo; RevisionChange;
	RevisionSign; RevisionDelete; RevisionAttach; RevisionClipping;
	RevisionSawtooth; RevisionThinking; RevisionPraise; RevisionLine;
	RevisionSimpleChange; RevisionHyperlink; RevisionLineAttach;
	RevisionLineLink; RevisionLineTransfer; RevisionRightmove;
	RevisionLeftmove; RevisionTransfer; RevisionSplit;
}

# Implict enum
enum BinItemType {
	Link; Embedding; Storage;
}
enum FontType {
	rep; ttf; hft;
}
enum GradationType {
	null; Linear; Radial; Conical; Square;
}
enum ShadowType {
	null; Drop; Cont;
}
enum ImageEffectType {
	RealPic; GrayScale; BlackWhite;
}
enum UnderlineType {
	null; Bottom; Center; Top;
}
enum StrikeoutType {
	None; Continuous;
}
enum TabItemType {
	Left; Right; Center; Decimal;
}
enum TextOffsetType {
	percent; hwpunit;
}
enum VerAlignType {
	Baseline; Top; Center; Bottom;
}
enum HeadingType {
	None; Outline; Number; Bullet;
}
enum BreakLatinWordType {
	KeepWord; Hyphenation; BreakWord;
}
enum LineSpacingType {
	Percent; Fixed; BetweenLines; AtLeast;
}
enum StyleType {
	Para; Char;
}
enum ItemType {
	Bstr; "Integer"; "Set"; "Array"; "BinData";
}
enum PageStartsOnType {
	Both; Even; Odd;
}
enum GutterType {
	LeftOnly; LeftRight; TopBottom;
}
enum NoteNumberingType {
	Continuous; OnSection; OnPage;
}
enum FootNoteShapePlaceType {
	EachColumn; MergedColumn; RightMostColumn;
}
enum EndNoteShapePlaceType {
	EndOfDocument; EndOfSection;
}
# PageStartsOnType과 같으나 혹시 몰라 다시 적음
enum PageBorderFillType {
	Both; Even; Odd;
}
enum FillAreaType {
	Paper; Page; Border;
}
# 역시 다시 적음
enum MasterPageType {
	Both; Even; Odd;
}
# VerAlignType과 다름
enum VertAlignType {
	Top; Center; Bottom;
}
enum ExtMasterPageType {
	LastPage; OptionalPage;
}
enum ColDefType {
	Newspaper; BalancedNewspaper; Parallel;
}
enum LayoutType {
	Left; Right; Mirror;
}
enum PageBreakType {
	None; Table; Cell;
}
enum NumberingType {
	None; Figure; Table; Equation;
}
enum TextFlowType {
	BothSides; LeftOnly; RightOnly; LargestOnly;
}
enum WidthRelToType {
	Paper; Page; Column; Para; Absolute;
}
enum HeightRelToType {
	Paper; Page; Absolute;
}
enum VertRelToType {
	Paper; Page; Para;
}
enum VertAlignType {
	Top; Center; Bottom; Inside; Outside;
}
enum HorzRelToType {
	Paper; Page; Column; Para;
}
enum HorzAlignType {
	Left; Center; Right; Inside; Outside;
}
enum SideType {
	Left; Right; Top; Bottom;
}
enum EndCapType {
	Round; Flat;
}
enum OutlineStyleType {
	Normal; Outer; Inner;
}
enum ArcType {
	Normal; Pie; Chord;
}
enum SegmentType {
	Line; Curve;
}
enum ObjetType {
	Unknown; Embedded; Link; Static; Equation;
}
enum DrawAspectType {
	Content; ThumbNail; Icon; DocPrint;
}
enum AlignType {
	Left; Right; Center; Full; Table;
}
enum PosType {
	None;
	TopLeft; TopCenter; TopRight;
	BottomLeft; BottomCenter; BottomRight;
	OutsideTop; OutsideBottom;
	InsideTop; InsideBottom;
}
enum TargetProgramType {
	None; Hwp70; "Word";
}

# HWPML nodes
# 3. 루트 엘리먼트
node HWPML {
	String Version default="2.8";
	String SubVersion default="8.0.0.0";
	# Style2가 아니라 Style인 듯
	String Style default="embed";
}

# 4. 헤더 엘리먼트
node HEAD {
	Int SecCnt;
}

# 4.1. 문서 요약 정보 엘리먼트
node DOCSUMMARY {}
node TITLE {}
node SUBJECT {}
node AUTHOR {}
node DATE {}
node KEYWORDS {}
node COMMENTS {}
node FORBIDDENSTRING {}
node FORBIDDEN BASE64 {
	String Id;
}

# 4.2. 문서 설정 정보 엘리먼트
node DOCSETTING {}
node BEGINNUMBER {
	Int Page;
	Int Footnote;
	Int Endnote;
	Int Picture;
	Int Table;
	Int Equation;
	Int TotalPage;
}
node CARETPOS {
	String List;
	String Para;
	String Pos;
}

# 4.3. 문서 글꼴 / 스타일 정보
node MAPPINGTABLE {}
# 4.3.1. 문서 내 그림 / OLE 정보
node BINDATALIST {
	Int Count default="0";
}
node BINITEM {
	enum BinItemType Type;
	String APath;
	String RPath;
	String BinData;
	String Format;
}
# 4.3.2. 글꼴 정보
node FACENAMELIST {}
node FONTFACE {
	enum LangType Lang;
	Int Count;
}
node FONT {
	Int Id;
	enum FontType Type;
	String Name;
}
node SUBSTFONT {
	String Type;
	String Name;
}
node TYPEINFO {
	String FamilyType;
	String SerifStyle;
	Int Weight;
	Int Proportion;
	Int Contrast;
	Int StrokeVariation;
	Int ArmStyle;
	Int Letterform;
	Int Midline;
	Int XHeight;
}
# 4.3.3. 테두리 / 배경 / 채우기 정보
node BORDERFILLLIST {
	Int Count;
}
node BORDERFILL {
	Int Id;
	Boolean ThreeD default="false";
	Boolean Shadow default="false";
	Int Slash default="0";
	Int BackSlash default="0";
	Int CrookedSlash default="0";
	Int CounterSlash default="0";
	Int CounterBackSlash default="0";
	Int BreakCellSeparateLine default="0";
	# 문서에 없음
	Int CenterLine default="0";
}
node LEFTBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node RIGHTBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node TOPBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node BOTTOMBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node DIAGONAL {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node FILLBRUSH {}
node WINDOWBRUSH {
	Int FaceColor;
	Int HatchColor;
	enum HatchStyle HatchStyle;
	Int Alpha;
}
node GRADATION {
	enum GradationType Type;
	Int Angle default="90";
	Int CenterX default="0";
	Int CenterY default="0";
	Int Step default="50";
	Int ColorNum default="2";
	Int StepCenter default="50";
	Int Alpha;
}
node COLOR {
	Int Value;
}
node IMAGEBRUSH {
	enum InfillMode Mode default="Tile";
}
node IMAGE {
	Int Bright default="0";
	Int Contrast default="0";
	enum ImageEffectType Effect;
	Int BinItem;
	Int Alpha;
}

# 4.3.4. 글자 모양 정보
node CHARSHAPELIST {
	Int Count;
}
node CHARSHAPE {
	Int Id;
	Int Height default="1000";
	Int TextColor default="0";
	Int ShadeColor default="4294967295";
	Boolean UseFontSpace default="false";
	Boolean UseKerning default="false";
	Int SymMark default="0";
	Int BorderFillId;
}
node FONTID {
	Int Hangul;
	Int Latin;
	Int Hanja;
	Int Japanese;
	Int Other;
	Int Symbol;
	Int User;
}
node RATIO {
	Int Hangul default="100";
	Int Latin default="100";
	Int Hanja default="100";
	Int Japanese default="100";
	Int Other default="100";
	Int Symbol default="100";
	Int User default="100";
}
node CHARSPACING {
	Int Hangul default="0";
	Int Latin default="0";
	Int Hanja default="0";
	Int Japanese default="0";
	Int Other default="0";
	Int Symbol default="0";
	Int User default="0";
}
node RELSIZE {
	Int Hangul default="100";
	Int Latin default="100";
	Int Hanja default="100";
	Int Japanese default="100";
	Int Other default="100";
	Int Symbol default="100";
	Int User default="100";
}
node CHAROFFSET {
	Int Hangul default="0";
	Int Latin default="0";
	Int Hanja default="0";
	Int Japanese default="0";
	Int Other default="0";
	Int Symbol default="0";
	Int User default="0";
}
node ITALIC {}
node BOLD {}
node UNDERLINE {
	enum UnerlineType Type default="Bottom";
	enum LineType2 Shape default="Solid";
	Int Color default="0";
}
node STRIKEOUT {
	enum StrikeoutType Type default="Continuous";
	enum LineType2 Shape default="Solid";
	Int Color default="0";
}
node OUTLINE {
	enum LineType3 Type default="Solid";
}
node SHADOW {
	enum ShadowType Type;
	Int Color;
	Int OffsetX default="10";
	Int OffsetY default="10";
	Int Alpha;
}
node EMBOSS {}
node ENGRAVE {}
node SUPERSCRIPT {}
node SUBSCRIPT {}

# 4.3.5. 탭 정보
node TABDEFLIST {
	Int Count;
}
node TABDEF {
	Int Id;
	Boolean AutoTabLeft default="false";
	Boolean AutoTabRight default="false";
}
node TABITEM {
	Int Pos;
	enum TabItemType Type default="Left";
	enum LineType2 Leader default="Solid";
}
node NUMBERINGLIST {
	Int Count;
}
node NUMBERING {
	Int Id;
	Int Start default="1";
}
node PARAHEAD {
	Int Level;
	enum AlignmentType2 Alignment default="Left";
	Boolean UseInstWidth default="true";
	Boolean AutoIndent default="true";
	Int WidthAdjust default="0";
	enum TextOffsetType TextOffsetType default="percent";
	Int TextOffset default="50";
	enum NumberType1 NumFormat default="Digit";
	Int CharShape;
}

# 4.3.6. 글머리표 정보
node BULLETLIST {
	Int Count;
}
node BULLET {
	Int Id;
	String Char;
	Boolean Image default="false";
}

# 4.3.7. 문단 모양 정보
node PARASHAPELIST {
	Int Count;
}
node PARASHAPE {
	Int Id;
	enum AlignmentType1 Align default="Justify";
	enum VerAlignType VerAlign default="Baseline";
	enum HeadingType HeadingType default="None";
	Int Heading;
	Int Level default="0";
	Int TabDef;
	enum BreakLatinWordType BreakLatinWord default="KeepWord";
	Boolean BreakNonLatinWord default="true";
	Int Condense default="0";
	Boolean WidowOrphan default="false";
	Boolean KeepWithNext default="false";
	Boolean KeepLines default="false";
	Boolean PageBreakBefore default="false";
	Boolean FontLineHeight default="false";
	Boolean SnapToGrid default="true";
	enum LineWrapType LineWrap default="break";
	Boolean AutoSpaceEAsianEng default="true";
	Boolean AutoSpaceEAsianNum default="true";
}
node PARAMARGIN {
	# 숫자 또는 숫자 다음 ch
	String Indent default="0";
	Int Left default="0";
	Int Right default="0";
	Int Prev default="0";
	Int Next default="0";
	enum LineSpacingType LineSpacingType default="Percent";
	Int LineSpacing default="160";
}
node PARABORDER {
	Int BorderFill;
	Int OffsetLeft;
	Int OffsetRight;
	Int OffsetTop;
	Int OffsetBottom;
	Boolean Connect default="false";
	Boolean IgnoreMargin default="false";
}

# 4.3.8. 스타일 정보
node STYLELIST {
	Int Count;
}
node STYLE {
	Int Id;
	enum StyleType Type default="Para";
	String Name;
	String EngName;
	Int ParaShape;
	Int CharShape;
	Int NextStyle;
	# TODO: 아래 두 개 타입 찾기
	String LangId;
	String LockForm;
}

# 4.3.9. 메모 정보
node MEMOSHAPELIST {
	Int Count;
}
node MEMO {
	Int Id;
	Int Width default="0";
	# TODO: enum 찾기
	String LineType;
	Int LineColor;
	Int FillColor;
	Int ActiveColor;
	# TODO: 타입 찾기
	String MemoType;
}

# 5. 본문 엘리먼트
node BODY {}
node SECTION {
	Int Id;
}
node P {
	Int ParaShape;
	Int Style;
	Int InstId;
	Boolean PageBreak default="false";
	Boolean ColumnBreak default="false";
}
node TEXT {
	Int CharShape;
}

# 5.1. 글자 엘리먼트
node CHAR {
	Int Style;
}
node MARKPENBEGIN {
	Int Color;
}
node MARKPENEND {}
node TITLEMARK {
	Boolean Ignore;
}
node TAB {}
node LINEBREAK {}
# (SIC)
node HYPEN {}
node NBSPACE {}
node FWSPACE {}

# 5.2. 구역 정의 엘리먼트
node SECDEF {
	Int TextDirection default="0";
	Int SpaceColumns;
	# TODO: 글자 수일때에는?
	Int TabStop default="8000";
	Int OutlineShape default="1";
	Int LineGrid default="0";
	Int CharGrid default="0";
	Boolean FirstBorder default="false";
	Boolean FirstFill default="false";
	Int ExtMasterpageCount default="0";
	Int MemoShapeId;
	# 우선 존재하는 값은 0임.
	Int TextVerticalWidthHead;
}
node PARAMETERSET {
	Int SetId;
	Int Count;
}
node PARAMETERARRAY {
	Int Count;
}
node ITEM {
	Int ItemId;
	enum ItemType Type;
}

# 5.2.1. 시작 번호 정보
node STARTNUMBER {
	enum PageStartsOnType PageStartsOn default="Both";
	Int Page default="0";
	Int Figure default="0";
	Int Table default="0";
	Int Equation default="0";
}

# 5.2.2. 감추기 정보
node HIDE {
	Boolean Header default="false";
	Boolean Footer default="false";
	Boolean MasterPage default="false";
	Boolean Border default="false";
	Boolean Fill default="false";
	Boolean PageNumPos default="false";
	Boolean EmptyLine default="false";
}

# 5.2.3. 용지 설정 정보
node PAGEDEF {
	Int Landscape default="0";
	Int Width default="59528";
	Int Height default="84188";
	enum GutterType GutterType default="LeftOnly";
}
node PAGEMARGIN {
	Int Left default="8504";
	Int Right default="8504";
	Int Top default="5668";
	Int Bottom default="4252";
	Int Header default="4252";
	Int Footer default="4252";
	Int Gutter default="0";
}

# 5.2.4. 각주/미주 모양 정보
node FOOTNOTESHAPE {}
node ENDNOTESHAPE {}
node AUTONUMFORMAT {
	enum NumberType2 Type default="Digit";
	String UserChar;
	String PrefixChar;
	String SuffixChar default=")";
	Boolean Superscript;
}
node NOTELINE {
	String Length;
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color;
}
node NOTESPACING {
	Int AboveLine;
	Int BelowLine;
	Int BetweenNotes;
}
node NOTENUMBERING {
	enum NoteNumberingType Type default="Continuous";
	# Type이 OnSection일 때에만 사용
	Int NewNumber default="1";
}
node NOTEPLACEMENT {
	# 부모에 따라 enum이 달라짐
	String Place;
	Boolean BeneathText;
}

# 5.2.5. 쪽 테두리/배경 정보
node PAGEBORDERFILL {
	enum PageBorderFillType Type default="Both";
	Int BorderFill;
	Boolean TextBorder default="false";
	Boolean HeaderInside default="false";
	Boolean FooterInside default="false";
	enum FillAreaType FillArea default="Paper";
}
node PAGEOFFSET {
	Int Left default="1417";
	Int Right default="1417";
	Int Top default="1417";
	Int Bottom default="1417";
}

# 5.2.6. 바탕쪽 정보
node MASTERPAGE {
	enum MasterPageType Type default="Both";
	Int TextWidth;
	Int TextHeight;
	Boolean HasTextRef default="false";
	Boolean HasNumRef default="false";
}
node PARALIST {
	Int TextDirection default="0";
	enum LineWrapType LineWrap default="Break";
	enum VertAlignType VertAlign default="Top";
	Int LinkListID;
	Int LinkListIDNext;
}

# 5.2.7. 확장 바탕쪽 정보
node EXT_MASTERPAGE {
	enum ExtMasterPageType Type;
	# Type이 OptionalPage일 때
	Int PageNumber;
	Boolean PageDuplicate;
	Boolean PageFront;
}

# 5.3. 단 정의 정보
node COLDEF {
	enum ColDefType Type default="Newspaper";
	Int Count default="1";
	enum LayoutType Layout default="Left";
	Boolean SameSize default="false";
	Int SameGap default="0";
}
node COLUMNLINE {
	enum LineType Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color;
}
node COLUMNTABLE {}
node COLUMN {
	Int Width;
	Int Gap;
}

# 5.4. 표
node TABLE {
	enum PageBreakType PageBreak default="Cell";
	Boolean RepeatHeader default="true";
	Int RowCount;
	Int ColCount;
	Int CellSpacing default="0";
	Int BorderFill;
}
node SHAPEOBJECT {
	Int InstId;
	Int ZOrder default="0";
	enum NumberingType NumberingType default="None";
	enum TextWrapType TextWrap;
	enum TextFlowType TextFlow default="BothSides";
	Boolean Lock default="false";
}
node SIZE {
	Int Width;
	Int Height;
	enum WidthRelToType WidthRelTo default="Absolute";
	enum HeightRelToType HeightRelTo default="Absolute";
	Boolean Protect default="false";
}
node POSITION {
	Boolean TreatAsChar;
	Boolean AffectLSpacing default="false";
	enum VertRelToType VertRelTo;
	enum VertAlignType VertAlign;
	enum HorzRelToType HorzRelTo;
	enum HorzAlignType HorzAlign;
	Int VertOffset;
	Int HorzOffset;
	Boolean FlowWithText default="false";
	Boolean AllowOverlap default="false";
	# 5.7.5.2992부터 추가된 속성
	Boolean HoldAnchorAndSO default="false";
}
node OUTSIDEMARGIN {
	# Table: 283, Equation: 56, Picture: 0, Drawing: 0, OLE: ?
	Int Left;
	Int Right;
	Int Top;
	Int Bottom;
}
node CAPTION {
	enum SideType Side default="Left";
	Boolean FullSize default="false";
	Int Width;
	Int Gap Default="850";
	Int LastWidth;
}
node SHAPECOMMENT {}
node INSIDEMARGIN {
	# Table: 141, Picture: 0
	Int Left;
	Int Right;
	Int Top;
	Int Bottom;
}
node CELLZONELIST {
	Int Count;
}
node CELLZONE {
	Int StartRowAddr;
	Int StartColAddr;
	Int EndRowAddr;
	Int EndColAddr;
	Int BorderFill;
}
node ROW {}
node CELL {
	String Name;
	Int ColAddr;
	Int RowAddr;
	Int ColSpan default="1";
	Int RowSpan default="1";
	Int Width;
	Int Height;
	Boolean Header default="false";
	Boolean HasMargin default="false";
	Boolean Protect default="false";
	Boolean Editable default="false";
	Boolean Dirty default="false";
	Int BorderFill;
}
node CELLMARGIN {
	Int Left default="0";
	Int Right default="0";
	Int Top default="0";
	Int Bottom default="0";
}

# 5.5. 그림
node PICTURE {
	Boolean Reverse default="false";
}
node SHAPECOMPONENT {
	# TODO: 타입 찾기
	String HRef;
	Int XPos default="0";
	Int YPos default="0";
	Int GroupLevel default="0";
	Int OriWidth;
	Int OriHeight;
	Int CurWidth;
	Int CurHeight;
	Boolean HorzFlip default="false";
	Boolean VertFlip default="false";
	# TODO: 정말 Int인지 확인하기
	Int InstID;
}
node ROTATIONINFO {
	Int Angle default="0";
	# 기본값: 개체 가운데점
	Int CenterX;
	Int CenterY;
}
node RENDERINGINFO {}
node TRANSMATRIX {
	Float E1; Float E2; Float E3;
	Float E4; Float E5; Float E6;
}
node SCAMATRIX {
	Float E1; Float E2; Float E3;
	Float E4; Float E5; Float E6;
}
node ROTMATRIX {
	Float E1; Float E2; Float E3;
	Float E4; Float E5; Float E6;
}
node LINESHAPE {
	Int Color;
	Int Width;
	enum LineType1 Style default="Solid";
	enum EndCapType EndCap default="Flat";
	enum ArrowType HeadStyle default="Normal";
	enum ArrowType TailStyle default="Normal";
	enum ArrowSize HeadSize default="SmallSmall";
	enum ArrowSize TailSize default="SmallSmall";
	enum OutlineStyleType OutlineStyle default="Normal";
	Int Alpha;
}
node IMAGERECT {
	Int X0; Int Y0;
	Int X1; Int Y1;
	Int X2; Int Y2;
}
node IMAGECLIP {
	Int Left;
	Int Top;
	Int Right;
	Int Bottom;
}
node EFFECTS {}
node SHADOWEFFECT {
	# TODO
}
node GLOW {
	Int Alpha;
	Int Radius;
}
node SOFTEDGE {
	Int Radius;
}
node REFLECTION {
	# TODO
}
node EFFECTSCOLOR {
	# TODO
}
node COLOREFFECT {
	# TODO
}

# 5.6. 그리기 개체
node DRAWINGOBJECT {}
node DRAWTEXT {
	Int LastWidth;
	String Name;
	Boolean Editable default="false";
}
node TEXTMARGIN {
	Int Left default="238";
	Int Right default="238";
	Int Top default="238";
	Int Bottom default="238";
}

# 5.6.1. 선
node LINE {
	Int StartX; Int StartY;
	Int EndX; Int EndY;
	Boolean IsReverseHV default="false";
}

# 5.6.2. 사각형
node RECTANGLE {
	Int Ratio;
	Int X0; Int Y0;
	Int X1; Int Y1;
	Int X2; Int Y2;
	# DOC: X3, Y3도 있음
	Int X3; Int Y3;
}

# 5.6.3. 타원
node ELLIPSE {
	Boolean IntervalDirty default="false";
	Boolean HasArcProperty default="false";
	enum ArcType ArcType default="Normal";
	Int CenterX; Int CenterY;
	Int Axis1X; Int Axis1Y;
	Int Axis2X; Int Axis2Y;
	Int Start1X; Int Start1Y;
	Int End1X; Int End1Y;
	Int Start2X; Int Start2Y;
	Int End2X; Int End2Y;
}

# 5.6.4. 호
node ARC {
	# 위 타원과 같은 enum?
	enum ArcType Type default="Normal";
	Int CenterX; Int CenterY;
	Int Axis1X; Int Axis1Y;
	Int Axis2X; Int Axis2Y;
}

# 5.6.5. 다각형
node POLYGON {}
node POINT {
	Int X; Int Y;
}

# 5.6.6. 곡선
node CURVE {}
node SEGMENT {
	enum SegmentType Type default="Curve";
	Int X1; Int Y1; Int X2; Int Y2;
}

# 5.6.7. 연결선
node CONNECTLINE {
	Int Type;
	Int StartX; Int StartY;
	Int EndX; Int EndY;
	Int StartSubjectID;
	Int StartSubjectIndex;
	Int EndSubjectID;
	Int EndSubjectIndex;
}

# DOC: 문서에 없음
node CONTROLPOINT {
	Int Type;
	Int X; Int Y;
}

# 5.7. Unknown Object
node UNKNOWNOBJECT {
	Int Ctrlid; # TODO_SOMETIME: CtrlId인지 확인하기
	Int X0; Int Y0;
	Int X1; Int Y1;
	Int X2; Int Y2;
	Int X3; Int Y3;
}

# 5.8. 양식 객체
node FORMOBJECT {
	String Name;
	Int ForeColor;
	Int BackColor;
	String GroupName;
	Boolean TabStop default="true";
	# TODO: 타입 찾기
	String TabOrder;
	Boolean Enabled default="true";
	Int BorderType default="0";
	Boolean DrawFrame default="true";
	Boolean Printable default="true";
}
node FORMCHARSHAPE {
	Int CharShape default="0";
	Boolean FollowContext default="false";
	Boolean AutoSize default="false";
	Boolean WordWrap default="false";
}
node BUTTONSET {
	# TODO: 타입 다 찾기
	String Caption;
	String Value;
	String RadioGroupName;
	Boolean TriState;
	String BackStyle;
}

# 5.8.1. 라디오 버튼
node RADIOBUTTON {}

# 5.8.2. 체크 버튼
node CHECKBUTTON {}

# 5.8.3. 콤보 박스
node COMBOBOX {
	Int ListBoxRows;
	Int ListBoxWidth;
	String Text;
	# TODO: 정말 Boolean인지 확인하기
	Boolean EditEnable;
}

# 5.8.4. 에디트
node EDIT {
	# TODO: 타입 다 찾기
	String MultiLine;
	String PasswordChar;
	Int MaxLength;
	Boolean ScrollBars;
	String TabKeyBehavior;
	# 아래 두 개는 Boolean 확실함.
	Boolean Number;
	Boolean ReadOnly;
	String AlignText;
}
node EDITTEXT {}

# 5.8.5. 리스트 박스
node LISTBOX {
	# TODO
}

# 5.8.6. 스크롤바
node SCROLLBAR {
	# TODO
}

# 5.9. 묶음 객체
node CONTAINER {}

# 5.10. OLE 객체
node OLE {
	# 오타 아님!
	enum ObjetType ObjetType;
	Int ExtentX; Int ExtentY;
	Int BinItem;
	enum DrawAspectType DrawAspect;
	Boolean HasMoniker default="false";
	Int EqBaseLine;
}

# 5.11. 한글 97 수식
node EQUATION {
	Boolean LineMode default="false";
	Int BaseUnit default="1000";
	Int TextColor default="0";
	Int BaseLine;
	String Version;
}
node SCRIPT {}

# 5.12. 글맵시
node TEXTART {
	String Text;
	Int X0; Int Y0;
	Int X1; Int Y1;
	Int X2; Int Y2;
	Int X3; Int Y3;
}
node TEXTARTSHAPE {
	String FontName;
	# TODO_SOMETIME: enum 찾기
	String FontStyle default="Regular";
	# TODO: enum 정하기 (htf?)
	String FontType default="ttf";
	Int TextShape default="0";
	Int LineSpacing default="120";
	Int CharSpacing default="100";
	enum AlignType Align default="Left";
}
node OUTLINEDATA {
	Int Count;
}

# 5.13. 필드 시작
node FILEDBEGIN {
	enum FieldType Type;
	String Name;
	Int InstId;
	Boolean Editable default="true";
	Boolean Dirty default="false";
	# TODO_SOMETIME: 타입 찾기
	String Property;
	String Command;
}

# 5.14. 필드 끝
node FIELDEND {
	enum FieldType Type;
	Boolean Editable default="true";
	# TODO_SOMETIME: 타입 찾기
	String Property;
}

# 5.15. 책갈피
node BOOKMARK {
	String Name;
}

# 5.16. 머리말, 꼬리말
node HEADER {
	# TODO
}
node FOOTER {
	# TODO
}

# 5.17. 각주, 미주
node FOOTNOTE {}
node ENDNOTE {}

# 5.18. 자동 번호, 새 번호
node AUTONUM {
	# TODO
}
node NEWNUM {
	# TODO
}

# 5.19. 홀/짝수 조정
node PAGENUMCTRL {
	enum PageStartsOnType PageStartsOn default="Both";
}

# 5.20. 감추기
node PAGEHIDING {
	Boolean HideHeader default="false";
	Boolean HideFooter default="false";
	Boolean HideMasterPage default="false";
	Boolean HideBorder default="false";
	Boolean HideFill default="false";
	Boolean HidePageNum default="false";
}

# 5.21. 쪽번호 위치
node PAGENUM {
	enum PosType Pos default="TopLeft";
	enum NumberType1 FormatType default="Digit";
	# TODO: 타입 찾기
	String SideChar;
}

# 5.22. 찾아보기 표식
node INDEXMARK {}
node KEYFIRST {}
node KEYSECOND {}

# 5.23. 글자 겹침
node COMPOSE {
	# TODO
}
node COMPCHARSHAPE {
	Int ShapeID;
}

# 5.24. 덧말
node DUTMAL {
	# TODO
}
node MAINTEXT {}
node SUBTEXT {}

# 5.25. 숨은 설명
node HIDDENCOMMENT {}

# 6. 부가 정보 엘리먼트
node TAIL {}
node BINDATASTORAGE {}
node BINDATA {
	Int Id;
	Int Size;
	String Encoding default="Base64";
	Boolean Compress default="true";
}
node SCRIPTCODE {
	String Type default="JScript";
	String Version;
}
node SCRIPTHEADER {}
node SCRIPTSOURCE {}
node PRESCRIPT {
	Int Count;
}
node POSTSCRIPT {
	Int Count;
}
node SCRIPTFUNCTION {}
node XMLTEMPLATE {}
node SCHEMA {}
node INSTANCE {}
node COMPATIBLEDOCUMENT {
	enum TargetProgramType TargetProgram default="None";
}
node LAYOUTCOMPATIBILITY {
	Boolean ApplyFontWeightToBold default="false";
	Boolean UseInnerUnderline default="false";
	Boolean FixedUnderlineWidth default="false";
	Boolean DoNotApplyStrikeout default="false";
	Boolean UseLowercaseStrikeout default="false";
	Boolean ExtendLineheightToOffset default="false";
	Boolean TreatQuotationAsLatin default="false";
	Boolean DoNotAlignWhitespaceOnRight default="false";
	Boolean DoNotAdjustWordInJustify default="false";
	Boolean BaseCharUnitOnEAsian default="false";
	Boolean BaseCharUnitOfIndentOnFirstChar default="false";
	Boolean AdjustLineheightToFont default="false";
	Boolean AdjustBaselineInFixedLinespacing default="false";
	Boolean ExcludeOverlappingParaSpacing default="false";
	Boolean ApplyNextspacingOfLastPara default="false";
	Boolean ApplyAtLeastToPercent100Pct default="false";
	Boolean DoNotApplyAutoSpaceEAsianEng default="false";
	Boolean DoNotApplyAutoSpaceEAsianNum default="false";
	Boolean AdjustParaBorderfillToSpacing default="false";
	Boolean ConnectParaBorderfillOfEqualBorder default="false";
	Boolean AdjustParaBorderOffsetWithBorder default="false";
	Boolean ExtendLineheightToParaBorderOffset default="false";
	Boolean ApplyParaBorderToOutside default="false";
	Boolean BaseLinespacingOnLinegrid default="false";
	Boolean ApplyCharSpacingToCharGrid default="false";
	Boolean DoNotApplyGridInHeaderfooter default="false";
	Boolean ExtendHeaderfooterToBody default="false";
	Boolean AdjustEndnotePositionToFootnote default="false";
	Boolean DoNotApplyImageEffect default="false";
	Boolean DoNotApplyShapeComment default="false";
	Boolean DoNotAdjustEmptyAnchorLine default="false";
	Boolean OverlapBothAllowOverlap default="false";
	Boolean DoNotApplyVertOffsetOfForward default="false";
	Boolean ExtendVertLimitToPageMargins default="false";
	Boolean DoNotHoldAnchorOfTable default="false";
	Boolean DoNotFormattingAtBeneathAnchor default="false";
	Boolean DoNotApplyExtensionCharCompose default="false";
}
