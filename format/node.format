## hwp.format for describing HWP 5.0 records & HWPML nodes
# Explict enum
enum LineType1 {
	None; Solid; Dash; Dot; DashDot; DashDotDot; LongDash; Circle;
	DoubleSlim; SlimThick; ThickSlim; SlimThickSlim;
}
enum LineType2 {
	Solid; Dash; Dot; DashDot; DashDotDot; LongDash; Circle;
	DoubleSlim; SlimThick; ThickSlim; SlimThickSlim;
}
enum LineType3 {
	null; Solid; Dot; Thick; Dash; DashDot; DashDotDot;
}
enum LineWidth {
	"0.1mm"; "0.12mm"; "0.15mm"; "0.2mm"; "0.25mm"; "0.3mm";
	"0.4mm"; "0.5mm"; "0.6mm"; "0.7mm"; "1.0mm"; "1.5mm";
	"2.0mm"; "3.0mm"; "4.0mm"; "5.0mm";
}
enum NumberType1 {
	Digit; CircledDigit; RomanCapital; RomanSmall; LatinCapital;
	LatinSmall; CircledLatinCapital; CircledLatinSmall; HangulSyllable;
	CircledHangulSyllable; HangulJamo; CircledHangulJamo;
	HangulPhonetic; Ideograph; CircledIdeograph;
}
enum NumberType2 {
	Digit; CircledDigit; RomanCapital; RomanSmall; LatinCapital;
	LatinSmall; CircledLatinCapital; CircledLatinSmall; HangulSyllable;
	CircledHangulSyllable; HangulJamo; CircledHangulJamo;
	HangulPhonetic; Ideograph; CircledIdeograph; DecagonCircle;
	DecagonCircleHanja; Symbol; UserChar;
}
enum AlignType1 {
	Justify; Left; Right; Center; Distribute; DistributeSpace;
}
enum AlignType2 {
	Left; Center; Right;
}
enum LangType {
	Hangul; Latin; Hanja; Japanese; Other; Symbol; User;
}
enum HatchStyle {
	null; Horizontal; Vertical; BackSlash; Slash; Cross; CrossDiagonal;
}
enum InfillMode {
	Tile; TileHorzTop; TileHorzBottom; TileVertLeft; TileVertRight;
	Total; Center; CenterTop; CenterBottom; LeftCenter; LeftTop; LeftBottom;
	RightCenter; RightTop; RightBottom; Zoom;
}
enum LineWrapType {
	Break; Squeeze; Keep;
}
enum TextWrapType {
	Square; Tight; Through; TopAndBottom; BehindText; InFrontText;
}

# Implict enum
enum FontType {
	rep; ttf; hft;
}
enum GradationType {
	null; Linear; Radial; Conical; Square;
}
enum ShadowType {
	null; Drop; Cont;
}
enum ImageEffectType {
	RealPic; GrayScale; BlackWhite;
}
enum UnderlineType {
	null; Bottom; Center; Top;
}
enum StrikeoutType {
	None; Continuous;
}
enum TabItemType {
	Left; Right; Center; Decimal;
}
enum TextOffsetType {
	percent; hwpunit;
}
enum VerAlignType {
	Baseline; Top; Center; Bottom;
}
enum HeadingType {
	None; Outline; Number; Bullet;
}
enum BreakLatinWordType {
	KeepWord; Hyphenation; BreakWord;
}
enum LineSpacingType {
	Precent; Fixed; BetweenLines; AtLeast;
}
enum StyleType {
	Para; Char;
}

# HWPML nodes
# 3. 루트 엘리먼트
node HWPML {
	String Version default="2.8";
	String SubVersion default="8.0.0.0";
	String Style2 default="embed";
}

# 4. 헤더 엘리먼트
node HEAD {
	Int SecCnt;
}

# 4.1. 문서 요약 정보 엘리먼트
node DOCSUMMARY {}
node TITLE {}
node SUBJECT {}
node AUTHOR {}
node DATE {}
node KEYWORDS {}
node COMMENTS {}
node FORBIDDENSTRING {}
node FORBIDDEN {
	String id;
}

# 4.2. 문서 설정 정보 엘리먼트
node DOCSETTING {}
node BEGINNUMBER {
	Int Page;
	Int Footnote;
	Int Endnote;
	Int Picture;
	Int Table;
	Int Equation;
	Int TotalPage;
}
node CARETPOS {
	String List;
	String Para;
	String Pos;
}

# 4.3. 문서 글꼴 / 스타일 정보
node MAPPINGTABLE {}
# 4.3.1. 문서 내 그림 / OLE 정보
node BINDATALIST {
	Int Count default="0";
}
node BINITEM {
	String Type;
	String APath;
	String RPath;
	String BinData;
	String Format;
}
# 4.3.2. 글꼴 정보
node FACENAMELIST {}
node FONTFACE {
	enum LangType Lang;
	Int Count;
}
node FONT {
	Int Id;
	enum FontType Type;
	String Name;
}
node SUBSTFONT {
	String Type;
	String Name;
}
node TYPEINFO {
	String FamilyType;
	String SerifStyle;
	Int Weight;
	Int Proportion;
	Int Contrast;
	Int StrokeVariation;
	Int ArmStyle;
	Int Letterform;
	Int Midline;
	Int XHeight;
}
# 4.3.3. 테두리 / 배경 / 채우기 정보
node BORDERFILLLIST {
	Int Count;
}
node BORDERFILL {
	Int Id;
	Boolean ThreeD default="false";
	Boolean Shadow default="false";
	Int Slash default="0";
	Int BackSlash default="0";
	Int CrookedSlash default="0";
	Int CounterSlash default="0";
	Int CounterBackSlash default="0";
	Int BreakCellSeparateLine default="0";
}
node LEFTBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node RIGHTBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node TOPBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node BOTTOMBORDER {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node DIAGONAL {
	enum LineType1 Type default="Solid";
	enum LineWidth Width default="0.12mm";
	Int Color default="0";
}
node FILLBRUSH {}
node WINDOWBRUSH {
	Int FaceColor;
	Int HatchColor;
	Int HatchStyle;
	Int Alpha;
}
node GRADATION {
	enum GradationType Type;
	Int Angle default="90";
	Int CenterX default="0";
	Int CenterY default="0";
	Int Step default="50";
	Int ColorNum default="2";
	Int StepCenter default="50";
	Int Alpha;
}
node COLOR {
	Int Value;
}
node IMAGEBRUSH {
	enum InfillMode Mode default="Tile";
}
node IMAGE {
	Int Bright default="0";
	Int Contrast default="0";
	enum ImageEffectType Effect;
	Int BinItem;
	Int Alpha;
}

# 4.3.4. 글자 모양 정보
node CHARSHAPELIST {
	Int Count;
}
node CHARSHAPE {
	Int Id;
	Int Height default="1000";
	Int TextColor default="0";
	Int ShadeColor default="4294967295";
	Boolean UseFontSpace default="false";
	Boolean UseKerning default="false";
	Int SymMark default="0";
	Int BorderFillId;
}
node FONTID {
	Int Hangul;
	Int Latin;
	Int Hanja;
	Int Japanese;
	Int Other;
	Int Symbol;
	Int User;
}
node RATIO {
	Int Hangul default="100";
	Int Latin default="100";
	Int Hanja default="100";
	Int Japanese default="100";
	Int Other default="100";
	Int Symbol default="100";
	Int User default="100";
}
node CHARSPACING {
	Int Hangul default="0";
	Int Latin default="0";
	Int Hanja default="0";
	Int Japanese default="0";
	Int Other default="0";
	Int Symbol default="0";
	Int User default="0";
}
node RELSIZE {
	Int Hangul default="100";
	Int Latin default="100";
	Int Hanja default="100";
	Int Japanese default="100";
	Int Other default="100";
	Int Symbol default="100";
	Int User default="100";
}
node CHAROFFSET {
	Int Hangul default="0";
	Int Latin default="0";
	Int Hanja default="0";
	Int Japanese default="0";
	Int Other default="0";
	Int Symbol default="0";
	Int User default="0";
}
node ITALIC {}
node BOLD {}
node UNDERLINE {
	enum UnerlineType Type default="Bottom";
	enum LineType2 Shape default="Solid";
	Int Color default="0";
}
node STRIKEOUT {
	enum StrikeoutType Type default="Continuous";
	enum LineType2 Shape default="Solid";
	Int Color default="0";
}
node OUTLINE {
	enum LineType3 Type default="Solid";
}
node SHADOW {
	enum ShadowType Type;
	Int Color;
	Int OffsetX default="10";
	Int OffestY default="10";
	Int Alpha;
}
node EMBOSS {}
node ENGRAVE {}
node SUPERSCRIPT {}
node SUBSCRIPT {}

# 4.3.5. 탭 정보
node TABDEFLIST {
	Int Count;
}
node TABDEF {
	Int Id;
	Boolean AutoTabLeft default="false";
	Boolean AutoTabRight default="false";
}
node TABITEM {
	Int Pos;
	enum TabItemType Type default="Left";
	enum LineType2 Leader default="Solid";
}
node NUMBERINGLIST {
	Int Count;
}
node Numbering {
	Int Id;
	Int Start default="1";
}
node PARAHEAD {
	Int Level;
	enum AlignType2 Alignment default="Left";
	Boolean UseInstWidth default="true";
	Boolean AutoIndent default="true";
	Int WidthAdjust default="0";
	enum TextOffsetType TextOffset default="50";
	enum NumberType1 NumFormat default="Digit";
	Int CharShape;
}

# 4.3.6. 글머리표 정보
node BULLETLIST {
	Int Count;
}
node BULLET {
	Int Id;
	String Char;
	Boolean Image default="false";
}

# 4.3.7. 문단 모양 정보
node PARASHAPELIST {
	Int Count;
}
node PARASHAPE {
	Int Id;
	enum AlignmentType1 Align default="Justify";
	enum VerAlignType VerAlign default="Baseline";
	enum HeadingType HeadingType default="None";
	Int Heading;
	Int Level default="0";
	Int TabDef;
	enum BreakLatinWordType BreakLatinWord default="KeepWord";
	Boolean BreakNonLatinWord default="true";
	Int Condense default="0";
	Boolean WidowOrphan default="false";
	Boolean KeepWithNext default="false";
	Boolean KeepLines default="false";
	Boolean PageBreakBefore default="false";
	Boolean FontLineHeight default="false";
	Boolean SnapToGrid default="true";
	enum LineWrapType LineWrap default="break";
	Boolean AutoSpaceEAsianEng default="true";
	Boolean AutoSpaceEAsianNum default="true";
}
node PARAMARGIN {
	# 숫자 또는 숫자 다음 ch
	String Indent default="0";
	Int Left default="0";
	Int Right default="0";
	Int Prev default="0";
	Int Next default="0";
	enum LineSpacingType LineSpacingType default="Percent";
	Int LineSpacing default="160";
}
node PARABORDER {
	Int BorderFill;
	Int OffsetLeft;
	Int OffsetRight;
	Int OffsetTop;
	Int OffsetBottom;
	Boolean Connect default="false";
	Boolean IgnoreMargin default="false";
}

# 4.3.8. 스타일 정보
node STYLELIST {
	Int Count;
}
node STYLE {
	Int Id;
	enum StyleType Type default="Para";
	String Name;
	String EngName;
	Int ParaShape;
	Int CharShape;
	Int NextStyle;
	# TODO: 아래 두 개 타입 찾기
	String LangId;
	String LockForm;
}

# 4.3.9. 메모 정보
node MEMOSHAPELIST {
	Int Count;
}
node MEMO {
	Int Id;
	Int Width default="0";
	# TODO: enum 찾기
	String LineType;
	Int LineColor;
	Int FillColor;
	Int ActiveColor;
	# TODO: 타입 찾기
	String MemoType;
}
